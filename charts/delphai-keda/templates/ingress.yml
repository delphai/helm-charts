{{ $domain := required "`domain` value is required" $.Values.domain }}

{{ if or (and $.Values.http.enabled $.Values.http.public) (and $.Values.grpc.enabled $.Values.grpc.public) }}
---
apiVersion: getambassador.io/v2
kind: Host
metadata:
  name: {{ $.Release.Name }}
  namespace: {{ $.Release.Namespace }}
spec:
  hostname: "*"
  acmeProvider:
    authority: none
  requestPolicy:
    insecure:
      action: Route
{{ end }} {{/* if or (and $.Values.http.enabled $.Values.http.public) (and $.Values.grpc.enabled $.Values.grpc.public) */}}

{{ if and $.Values.http.enabled $.Values.http.public }}
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: {{ $.Release.Name }}-http-subdomain
  namespace: {{ $.Release.Namespace }}
spec:
  {{ if or (eq $.Values.subdomain "api") (eq $.Values.subdomain "ml") }}
  prefix: "/{{ $.Release.Name }}/"
  {{ else }}
  prefix: "/"
  {{ end }}
  service: "{{ $.Release.Name }}:{{ if $.Values.http.publicWithOAuth }}{{ $.Values.http.oAuthProxyPort }}{{ else }}{{ $.Values.http.port }}{{ end }}"
  host: "{{ $.Values.subdomain }}.{{ $domain }}"
  allow_upgrade:
    - websocket
  timeout_ms: 60000
  idle_timeout_ms: 500000
  connect_timeout_ms: 2000
  {{ if or (eq $.Values.subdomain "api") (eq $.Values.subdomain "ml") }}
  cors:
    origins: "*"
    methods: "GET, PUT, POST, DELETE, HEAD, OPTIONS, PATCH"
    headers: "Origin, Content-Type, Accept, Authorization, X-Request-With, X-GENERAL-TOKEN, x-grpc-web,grpc-timeout"
    credentials: true
    max_age: "86400"
  {{ end }}

{{ if eq $.Values.subdomain "api" }}
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: {{ $.Release.Name }}-http-prefix
  namespace: {{ $.Release.Namespace }}
spec:
  prefix: "/service/{{ $.Release.Name }}/"
  service: "{{ $.Release.Name }}:{{ if $.Values.http.publicWithOAuth }}{{ $.Values.http.oAuthProxyPort }}{{ else }}{{ $.Values.http.port }}{{ end }}"
{{ if eq $.Values.delphaiEnvironment "review" }}
  host: "^app.*\\.{{ $domain }}$"
  host_regex: true
{{ else }}
  host: "app.{{ $domain }}"
{{ end }}
  allow_upgrade:
    - websocket
  timeout_ms: 60000
  idle_timeout_ms: 500000
  connect_timeout_ms: 2000
{{ end }} {{/* if eq $.Values.subdomain "api" */}}
{{ end }} {{/* if and $.Values.http.enabled $.Values.http.public */}}

{{ if and $.Values.grpc.enabled $.Values.grpc.public }}
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: {{ $.Release.Name }}-grpc
  namespace: {{ $.Release.Namespace }}
spec:
  grpc: true
  host: "{{ $.Release.Name }}.grpc.{{ $domain }}{{ if lookup "v1" "Service" "ambassador" "ambassador" }}:80{{ end }}"
  prefix: "/"
  service: "{{ $.Release.Name }}-grpc:80"
  timeout_ms: 60000
  idle_timeout_ms: 500000
  connect_timeout_ms: 2000
  cors:
    origins: "*"
    methods: "GET, PUT, POST, DELETE, HEAD, OPTIONS, PATCH"
    headers: "Origin, Content-Type, Accept, Authorization, X-Request-With, X-GENERAL-TOKEN, x-grpc-web,grpc-timeout"
    credentials: true
    max_age: "86400"
{{ end }}{{/* if and $.Values.grpc.enabled $.Values.grpc.public */}}
