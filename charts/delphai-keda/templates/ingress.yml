{{ if and .Values.http.enabled .Values.http.public }}
{{ if and (ne .Values.subdomain "api") (ne .Values.subdomain "ml") }}
{{ if not (lookup "v1" "Service" "ambassador" "ambassador") }}
---
apiVersion: getambassador.io/v2
kind: Host
metadata:
  name: {{ .Release.Name }}-http
  namespace: {{ .Release.Namespace }}
  annotations:
    {{ if (lookup "v1" "Service" "emissary" "emissary-ingress") }}
    external-dns.ambassador-service: emissary/emissary-ingress
    {{ else if (lookup "v1" "Service" "ambassador" "ambassador") }}
    external-dns.ambassador-service: ambassador/ambassador
    {{ end }}
spec:
  hostname: "{{ .Values.subdomain }}.{{ .Values.domain }}"
  acmeProvider:
    authority: none
  requestPolicy:
    insecure:
      action: Route
{{ end }} {{/* if not (lookup "v1" "Service" "ambassador" "ambassador") */}}
{{ end }} {{/* if and (ne .Values.subdomain "api") (ne .Values.subdomain "ml") */}}

---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: {{ .Release.Name }}-http
  namespace: {{ .Release.Namespace }}
spec:
  {{ if and (ne .Values.subdomain "api") (ne .Values.subdomain "ml") }}
  prefix: /
  {{ else }}
  prefix: /{{ .Release.Name }}/
  {{ end }}
  service: "{{ .Release.Name }}:{{ if .Values.http.publicWithOAuth }}{{ .Values.http.oAuthProxyPort }}{{ else }}{{ .Values.http.port }}{{ end }}"
  host: "{{ .Values.subdomain }}.{{ .Values.domain }}"
  allow_upgrade:
    - websocket
  timeout_ms: 60000
  idle_timeout_ms: 500000
  connect_timeout_ms: 2000
  {{ if or (eq .Values.subdomain "api") (eq .Values.subdomain "ml") }}
  cors:
    origins: "*"
    methods: "GET, PUT, POST, DELETE, HEAD, OPTIONS, PATCH"
    headers: "Origin, Content-Type, Accept, Authorization, X-Request-With, X-GENERAL-TOKEN, x-grpc-web,grpc-timeout"
    credentials: true
    max_age: "86400"
  {{ end }}


{{ if (lookup "v1" "Service" "ambassador" "ambassador") }}
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: {{ .Release.Name }}-http-live
  namespace: {{ .Release.Namespace }}
spec:
  {{ if and (ne .Values.subdomain "api") (ne .Values.subdomain "ml") }}
  prefix: /
  {{ else }}
  prefix: /{{ .Release.Name }}/
  {{ end }}
  service: '{{ .Release.Name }}:{{ if .Values.http.publicWithOAuth }}{{ .Values.http.oAuthProxyPort }}{{ else }}{{ .Values.http.port }}{{ end }}'
  host: {{ .Values.subdomain }}.delphai.live
  allow_upgrade:
    - websocket
  timeout_ms: 60000
  idle_timeout_ms: 500000
  connect_timeout_ms: 2000
  {{ if or (eq .Values.subdomain "api") (eq .Values.subdomain "ml") }}
  cors:
    origins: "*"
    methods: "GET, PUT, POST, DELETE, HEAD, OPTIONS, PATCH"
    headers: "Origin, Content-Type, Accept, Authorization, X-Request-With, X-GENERAL-TOKEN, x-grpc-web,grpc-timeout"
    credentials: true
    max_age: "86400"
  {{ end }}
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: {{ .Release.Name }}-http-com
  namespace: {{ .Release.Namespace }}
spec:
  {{ if and (ne .Values.subdomain "api") (ne .Values.subdomain "ml") }}
  prefix: /
  {{ else }}
  prefix: /{{ .Release.Name }}/
  {{ end }}
  service: '{{ .Release.Name }}:{{ if .Values.http.publicWithOAuth }}{{ .Values.http.oAuthProxyPort }}{{ else }}{{ .Values.http.port }}{{ end }}'
  host: {{ .Values.subdomain }}.delphai.com
  allow_upgrade:
    - websocket
  timeout_ms: 60000
  idle_timeout_ms: 500000
  connect_timeout_ms: 2000
  {{ if or (eq .Values.subdomain "api") (eq .Values.subdomain "ml") }}
  cors:
    origins: "*"
    methods: "GET, PUT, POST, DELETE, HEAD, OPTIONS, PATCH"
    headers: "Origin, Content-Type, Accept, Authorization, X-Request-With, X-GENERAL-TOKEN, x-grpc-web,grpc-timeout"
    credentials: true
    max_age: "86400"
  {{ end }}
{{ end }} {{/* if not (lookup "v1" "Service" "ambassador" "ambassador") */}}
{{ end }} {{/* if and .Values.http.enabled .Values.http.public */}}

{{ if and .Values.grpc.enabled .Values.grpc.public }}
{{ if not (lookup "v1" "Service" "ambassador" "ambassador") }}
---
apiVersion: getambassador.io/v2
kind: Host
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "external-dns.alpha.kubernetes.io/cloudflare-proxied": "false"
spec:
  hostname: "{{ .Release.Name }}.grpc.{{ .Values.domain }}"
  acmeProvider:
    authority: none
  requestPolicy:
    insecure:
      action: Route
{{ end }} {{/* if not (lookup "v1" "Service" "ambassador" "ambassador") */}}

{{ range .Values.grpc.services }}
---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: {{ $.Release.Name }}-grpc-{{ . | kebabcase | replace "." "-" }}
  namespace: {{ $.Release.Namespace }}
spec:
  grpc: true
  host: "{{ $.Release.Name }}.grpc.{{ $.Values.domain }}:80"
  prefix: /{{ . }}/
  rewrite: /{{ . }}/
  service: "{{ $.Release.Name }}-grpc:80"
  timeout_ms: 60000
  idle_timeout_ms: 500000
  connect_timeout_ms: 2000
  cors:
    origins: "*"
    methods: "GET, PUT, POST, DELETE, HEAD, OPTIONS, PATCH"
    headers: "Origin, Content-Type, Accept, Authorization, X-Request-With, X-GENERAL-TOKEN, x-grpc-web,grpc-timeout"
    credentials: true
    max_age: "86400"

---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: {{ $.Release.Name }}-grpc-web-{{ . | kebabcase | replace "." "-" }}
  namespace: {{ $.Release.Namespace }}
spec:
  grpc: true
  host: "grpc.{{ $.Values.domain }}"
  prefix: /{{ $.Release.Name }}/{{ . }}/
  rewrite: /{{ . }}/
  service: "{{ $.Release.Name }}-grpc:80"
  timeout_ms: 60000
  idle_timeout_ms: 500000
  connect_timeout_ms: 2000
  cors:
    origins: "*"
    methods: "GET, PUT, POST, DELETE, HEAD, OPTIONS, PATCH"
    headers: "Origin, Content-Type, Accept, Authorization, X-Request-With, X-GENERAL-TOKEN, x-grpc-web,grpc-timeout"
    credentials: true
    max_age: "86400"
{{ end }} {{/* range .Values.grpc.services */}}

---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: {{ $.Release.Name }}-grpc-reflection
  namespace: {{ $.Release.Namespace }}
spec:
  grpc: true
  host: "{{ $.Release.Name }}.grpc.{{ $.Values.domain }}:80"
  prefix: /grpc.reflection.v1alpha.ServerReflection/
  rewrite: /grpc.reflection.v1alpha.ServerReflection/
  service: "{{ $.Release.Name }}-grpc:80"
  cors:
    origins: "*"
    methods: "GET, PUT, POST, DELETE, HEAD, OPTIONS, PATCH"
    headers: "Origin, Content-Type, Accept, Authorization, X-Request-With, X-GENERAL-TOKEN, x-grpc-web,grpc-timeout"
    credentials: true
    max_age: "86400"

---
apiVersion: getambassador.io/v2
kind: Mapping
metadata:
  name: {{ $.Release.Name }}-grpc-health
  namespace: {{ $.Release.Namespace }}
spec:
  grpc: true
  host: "{{ $.Release.Name }}.grpc.{{ $.Values.domain }}:80"
  prefix: /grpc.health.v1.Health/
  rewrite: /grpc.health.v1.Health/
  service: "{{ $.Release.Name }}-grpc:80"
  cors:
    origins: "*"
    methods: "GET, PUT, POST, DELETE, HEAD, OPTIONS, PATCH"
    headers: "Origin, Content-Type, Accept, Authorization, X-Request-With, X-GENERAL-TOKEN, x-grpc-web,grpc-timeout"
    credentials: true
    max_age: "86400"
{{ end }}{{/* if and .Values.grpc.enabled .Values.grpc.public */}}
