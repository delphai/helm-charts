{{ if  .Values.grpc.enabled }}
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    delphai-subdomain: {{ .Release.Name }}.grpc
    'external-dns.alpha.kubernetes.io/cloudflare-proxied': 'false'
spec:
  template:
    metadata:
      annotations:
        'autoscaling.knative.dev/target': '{{ .Values.concurrency }}'
        'autoscaling.knative.dev/minScale': '{{ .Values.minScale }}'
    spec:
      containers:
        - image: {{ .Values.image }}
          imagePullPolicy: Always
          {{ if gt (len .Values.command) 0 }}
          command: {{ .Values.command }}
          {{ end }}
          args: {{ .Values.args }}
          env:
            - name: DELPHAI_ENVIRONMENT
              value: {{ .Values.delphaiEnvironment }}
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
          ports:
            - name: h2c
              containerPort: {{ .Values.grpc.port }}
{{ end }}
---
{{ if  .Values.http.enabled }}
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: {{ .Release.Name }}-http
  namespace: {{ .Release.Namespace }}
  annotations:
    {{ if eq $.Values.delphaiEnvironment "ml" }}
    delphai-subdomain: machine-learning
    'external-dns.alpha.kubernetes.io/cloudflare-proxied': 'true'
    {{ else }}
    delphai-subdomain: {{ .Release.Name }}
    'external-dns.alpha.kubernetes.io/cloudflare-proxied': 'true'
    {{ end }}
spec:
  template:
    metadata:
      annotations:
        'autoscaling.knative.dev/target': '{{ .Values.concurrency }}'
        'autoscaling.knative.dev/minScale': '{{ .Values.minScale }}'
    spec:
      containers:
        - image: {{ .Values.image }}
          imagePullPolicy: Always
          {{ if gt (len .Values.command) 0 }}
          command: {{ .Values.command }}
          {{ end }}
          args: {{ .Values.args }}
          env:
            - name: DELPHAI_ENVIRONMENT
              value: {{ .Values.delphaiEnvironment }}
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.http.port }}
{{ end }}