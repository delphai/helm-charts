data:
  AzureWebJobsStorage: {{ .Values.AzureWebJobsStorage }}
  FUNCTIONS_WORKER_RUNTIME: 
  BROWSER_URL: 
  delphaiscraper_SERVICEBUS: 
  sources_DOCUMENTDB: 
  parserServiceUrl: 
  cosmosDatabaseName: 
  cosmosSessionsCollectionName: 
  cosmosHtmlCollectionName: 
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
---
data:
  functions.get-scraping-result.default: 
  functions.run-browser.default: 
  functions.scrape-single-url.default: 
  functions.scrape-source-http.default: 
  host.function.default: 
  host.master: 
  host.systemKey.default: 
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  namespace: delphai-source-scraper
spec:
  selector:
    app: {{ .Release.Name }}-http
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-http
  namespace: delphai-source-scraper
  labels:
    app: {{ .Release.Name }}-http
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-http
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-http
    spec:
      containers:
      - name: {{ .Release.Name }}-http
        image: delphai{{ .Values.delphaiEnvironment }}.azurecr.io/{{ .Release.Namespace }}
        ports:
        - containerPort: 80
        env:
        - name: AzureFunctionsJobHost__functions__0
          value: scrape-single-url
        - name: AzureFunctionsJobHost__functions__1
          value: run-browser
        - name: AzureFunctionsJobHost__functions__2
          value: scrape-source-http
        - name: AzureFunctionsJobHost__functions__3
          value: get-scraping-result
        - name: AzureWebJobsSecretStorageType
          value: kubernetes
        - name: AzureWebJobsKubernetesSecretName
          value: secrets/func-keys-kube-secret-delphai-source-scaper
        envFrom:
        - secretRef:
            name: {{ .Release.Namespace }}
      imagePullSecrets:
      - name: acr-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: delphai-source-scaper
  namespace: delphai-source-scraper
  labels:
    app: delphai-source-scaper
spec:
  selector:
    matchLabels:
      app: delphai-source-scaper
  template:
    metadata:
      labels:
        app: delphai-source-scaper
    spec:
      containers:
      - name: delphai-source-scaper
        image: delphaidevelopment.azurecr.io/delphai-source-scaper
        env:
        - name: AzureFunctionsJobHost__functions__0
          value: scraper-middleman
        - name: AzureFunctionsJobHost__functions__1
          value: parse
        - name: AzureFunctionsJobHost__functions__2
          value: parser-middleman
        - name: AzureFunctionsJobHost__functions__3
          value: scrape
        - name: AzureFunctionsJobHost__functions__4
          value: validation-middleman
        envFrom:
        - secretRef:
            name: delphai-source-scaper
      imagePullSecrets:
      - name: acr-credentials
      serviceAccountName: delphai-source-scaper-function-keys-identity-svc-act
---
apiVersion: keda.k8s.io/v1alpha1
kind: ScaledObject
metadata:
  name: delphai-source-scaper
  namespace: delphai-source-scraper
  labels:
    deploymentName: delphai-source-scaper
spec:
  scaleTargetRef:
    deploymentName: delphai-source-scaper
  triggers:
  - type: cosmosdbtrigger
    metadata:
      type: cosmosDBTrigger
      name: documents
      direction: in
      leaseCollectionName: leases
      connectionStringSetting: sources_DOCUMENTDB
      databaseName: Prototype
      collectionName: sessions
      leaseCollectionPrefix: scraper
  - type: azure-servicebus
    metadata:
      name: message
      type: serviceBusTrigger
      direction: in
      topicName: parse
      subscriptionName: parse-subscription
      connection: delphaiscraper_SERVICEBUS
  - type: cosmosdbtrigger
    metadata:
      type: cosmosDBTrigger
      name: documents
      direction: in
      leaseCollectionName: leases
      connectionStringSetting: sources_DOCUMENTDB
      databaseName: Prototype
      collectionName: sessions
      leaseCollectionPrefix: parser
  - type: azure-servicebus
    metadata:
      name: message
      type: serviceBusTrigger
      direction: in
      topicName: scrape
      subscriptionName: scrape-subscription
      connection: delphaiscraper_SERVICEBUS
  - type: cosmosdbtrigger
    metadata:
      type: cosmosDBTrigger
      name: documents
      direction: in
      leaseCollectionName: leases
      connectionStringSetting: sources_DOCUMENTDB
      databaseName: Prototype
      collectionName: sessions
      leaseCollectionPrefix: validation
---

